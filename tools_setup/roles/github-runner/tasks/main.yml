
- name: Download repo file
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/rhel/docker-ce.repo
    dest: /etc/yum.repos.d/docker-ce.repo

- name: Install Docker
  ansible.builtin.dnf:
    name: docker-ce
    state: installed

- name: Remove invalid docker service file if it exists
  ansible.builtin.file:
    path: /etc/systemd/system/multi-user.target.wants/docker.service
    state: absent

- name: Copy service file
  ansible.builtin.template:
    src: docker.service
    dest: /etc/systemd/system/docker.service
    owner: root
    group: root
    mode: '0644'


- name: Start Docker
  ansible.builtin.systemd:
    name: docker
    state: restarted
    enabled: yes
    daemon-reload: yes

- name: Ensure Python 3 and pip are installed
  ansible.builtin.dnf:
    name:
      - python3
      - python3-pip
    state: present

#- name: Upgrade pip
#  ansible.builtin.pip:
#    name: pip
#    executable: python3 -m pip
#    state: latest

#- name: Install Python packages
#  ansible.builtin.pip:
#    name:
#      - requests
#      - packaging
#      - hvac
#    executable: /usr/bin/python3

#- name: Install hvac Python library
#  ansible.builtin.pip:
#    name: hvac
#    executable: python3 -m pip


- name: Get Runner Token
  ansible.builtin.shell: |
    gh api --method POST -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28"   /orgs/golive123/actions/runners/registration-token | jq .token | xargs
  delegate_to: localhost
  register: gh_org_token

#- name: Create GitHub Runner Container
#  community.docker.docker_container:
#    name:  runner-1
#    image: udaych123/github-runner
#    pull: true
#    state: started
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    restart_policy: always
#    env:
#      ORG: "{{ lookup('community.hashi_vault.hashi_vault', 'secret=kv/data/github-runner:ORG token=' + token + ' url=http://vault.yourtherapist.in:8200/') }}"
#      TOKEN: "{{ gh_org_token.stdout }}"
#      NAME: runner-1
#      ARM_TENANT_ID: "{{ lookup('community.hashi_vault.hashi_vault', 'secret=kv/data/azuresecrets:ARM_TENANT_ID token=' + token + ' url=http://vault.yourtherapist.in:8200/') }}"
#      ARM_SUBSCRIPTION_ID: "{{ lookup('community.hashi_vault.hashi_vault', 'secret=kv/data/azuresecrets:ARM_SUBSCRIPTION_ID token=' + token + ' url=http://vault.yourtherapist.in:8200/') }}"
#      ARM_CLIENT_SECRET: "{{ lookup('community.hashi_vault.hashi_vault', 'secret=kv/data/azuresecrets:ARM_CLIENT_SECRET token=' + token + ' url=http://vault.yourtherapist.in:8200/') }}"
#      ARM_CLIENT_ID: "{{ lookup('community.hashi_vault.hashi_vault', 'secret=kv/data/azuresecrets:ARM_CLIENT_ID token=' + token + ' url=http://vault.yourtherapist.in:8200/') }}"
#
#  loop:
#    - runner-1
#    - runner-2
#    - runner-3

- name: Create GitHub Runner Containers
  community.docker.docker_container:
    name: "{{ item }}"
    image: udaych123/github-runner
    pull: true
    state: started
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart_policy: always
    env:
      ORG: "{{ lookup('community.hashi_vault.hashi_vault', 'secret=kv/data/github-runner:ORG token=' + token + ' url=http://vault.yourtherapist.in:8200/') }}"
      TOKEN: "{{ gh_org_token.stdout }}"
      NAME: "{{ item }}"
      ARM_TENANT_ID: "{{ lookup('community.hashi_vault.hashi_vault', 'secret=kv/data/azuresecrets:ARM_TENANT_ID token=' + token + ' url=http://vault.yourtherapist.in:8200/') }}"
      ARM_SUBSCRIPTION_ID: "{{ lookup('community.hashi_vault.hashi_vault', 'secret=kv/data/azuresecrets:ARM_SUBSCRIPTION_ID token=' + token + ' url=http://vault.yourtherapist.in:8200/') }}"
      ARM_CLIENT_SECRET: "{{ lookup('community.hashi_vault.hashi_vault', 'secret=kv/data/azuresecrets:ARM_CLIENT_SECRET token=' + token + ' url=http://vault.yourtherapist.in:8200/') }}"
      ARM_CLIENT_ID: "{{ lookup('community.hashi_vault.hashi_vault', 'secret=kv/data/azuresecrets:ARM_CLIENT_ID token=' + token + ' url=http://vault.yourtherapist.in:8200/') }}"
  loop:
    - runner-1
    - runner-2
    - runner-3